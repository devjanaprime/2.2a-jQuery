/// JQuery lecture 00
/// Ver 1.1a
/// by dEv jAna
/// last edited 5-9-2016


///////////////////// VER 0.1 //////////////////////

// 1 get started:
create your index.html and your mySite.js files
include mySite.js in your html source

// 2 get current:
https://jquery.com/
include jquery-XXX.min.js in your html source

// 3 jquery scaffolding:
in mySite.js:

$(document).ready(function(){
   // jQuery methods
});

// 4 html scaffolding
// <html><head><body>

// 5 test jquery event
in html:

<div id="clickMeForAlert">Click Me to do... Something</div>

in js:
$(document).ready(function(){
   // jQuery methods
   $('#clickMeForAlert').clickclick(function(){
        console.log("Something happened");
    });
});

///////////////////// VER 0.2 //////////////////////

// 1 add select to html
<select id="selectNoValue">
  <option>First Option</option>
  <option>Second Option</option>
  <option>Third Option</option>
  <option>Fourth Option</option>
</select>

// 2 add select handler to js
$('#selectNoValue').change(function(){
  console.log( "selectNoValue: " + $('#selectNoValue').val());
});

/// run and show how this displays the text as a value

// 3 add new select to html
<select id="selectValue">
  <option value="0.5">First Option</option>
  <option value="0.6">Second Option</option>
  <option value="0.7">Third Option</option>
  <option value="0.8">Fourth Option</option>
</select>

// 4 add new handler to js
$('#selectValue').change(function(){
  console.log( "selectValue: " + $('#selectValue').val());
});

/// run and show how this displays the value for new selectValue
/// discuss instances in which this would be used


///////////////////// VER 0.3 //////////////////////
// add textIn to html before the selects

<input type="text" id="textIn" />

// add textIn handler to js (first with "change" and then with "keyup")
$('#textIn').keyup(function(){
  totalText = $('#textIn').val();
   console.log( "textIn: " + $('#textIn').val());
 });

// add "totalText" global var
var totalText;

// update click me to log out totalText
console.log("totalText: " + totalText );

// add placeholder to text input
<input type="text" id="textIn" placeholder="container name"/>

// update selects

<input type="text" id="textIn" placeholder="container name"/>
<select id="selectCapacity">
  <option>2</option>
  <option>12</option>
  <option>57</option>
  <option>107</option>
</select>
<select id="selectFill">
  <option value="0.0">Empty</option>
  <option value="0.25">Close to empty</option>
  <option value="0.5">Half</option>
  <option value="0.75">Mostly full</option>
  <option value="1.0">Full</option>
</select>

// update select handlers
$('#selectCapacity').change(function(){
   console.log( "selectCapacity: " + $('#selectCapacity').val());
});

$('#selectFill').change(function(){
  console.log( "selectFill: " + $('#selectFill').val());
});

/// run now to show functionality and debug

// update click to concatenate full text
// add this before the console.log output
totalText = $('#textIn').val() + " is " + $('#selectFill').val() + " full of it's " + $('#selectCapacity').val() + " capacity.";

/// run now to show functionality and debug
// have the students lead you through calculating the percent, actual fill amount, and adding a selector for what is in the container on click

///////////////////// VER 0.4 //////////////////////
// adding dom append

// add at bottom of html body
<div id="outputText"></div>

// add this to the js in the click funtion
$('#outputText').append( '<p>' + totalText + '</p>');

///////////////////// VER 0.5 //////////////////////

// have the students lead you through adding a global variable "counter" that serves as the ID and adding an id to the output

//////////////////////// Q&A + BREAK //////////////////////



///////////////////  REVIEW ////////////////////
// review basic JQuery format
retrieve and include JQuery js file
create and include js file

in HTML:

<ELEMENT id="ELEMENTNAME">

in js:
$('#ELEMENTNAME').EVENT(function(){
   // code goes here
 });

JQuery Events:
   click
   keyup
   mouseenter
   mouseleave
   mousedown
   mouseup
   hover
   focus
   blur
   change

///////////////////// VER 0.6 //////////////////////
// have the students lead exploration for a few minutes with these


///////////////////// VER 0.7 //////////////////////
// manipulating another element through JQ methods
// touched on this with append

$('#ELEMENTNAME').EVENT(function(){
   $('#OTHERELEMENTNAME').METHOD( PARAMSIFANY );
 });

// in html add a click to hide button at the bottom of the page
  <button id="peekaboo">Click for the awesome</button>

// in js add toggle to outputText using the new button

    $('#peekaboo').click(function(){
     $('#outputText').toggle();
    });

// also show slideToggle and fadeToggle with and without params
// jQuery methods
hide
show
toggle
slideUp
slideDown
slideToggle
fadeIn
fadeOut
fadeToggle

///////////////////// VER 0.8 //////////////////////
// chaining
 $('#outputText').fadeOut(1200).fadeIn(1600);

// chaining with delay
 $('#outputText').slideUp(500).delay(678).fadeIn(600);


///////////////////// VER 0.9 //////////////////////
// have the students lead you through a few fun chaining experiments


///////////////////// VER 1.0 //////////////////////
// validating input and giving the user a visual cue
// show blink by chaining fades
// show a way to use this as user input hinting by blinking the text input if empty
$('#clickMeToCalculate').click(function(){
   if( $('#textIn').val() == '' ){
     $('#textIn').fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100);
   }
   else{
     console.log("totalText: " + totalText );
     // calculate true outputText
     var amountFull = $('#selectFill').val() * $('#selectCapacity').val();
     console.log( "amountFull: " + amountFull );
     // inrement counter and use as record id
     counter++;
     var outputText = "id: " + counter + " - " + $('#textIn').val() + " is " + $('#selectFill').val() + " full of it's " + $('#selectCapacity').val() + " capacity: " + amountFull;
     $('#outputText').append( '<p>' + outputText + '</p>');
   }
 });
